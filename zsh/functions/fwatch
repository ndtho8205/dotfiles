# automatically run command with inotifywait

if test -t 1; then
  ncolors=$(command -v tput >/dev/null && tput colors)
  if test -n "$ncolors" && test "$ncolors" -ge 8; then
    standout="$(tput smso)"
    normal="$(tput sgr0)"
    green="$(tput setaf 2)"
    blue="$(tput setaf 4)"
  fi
fi

info() {
  printf "${standout}${blue} INFO ${normal} ${blue}%s${normal}\n" "$1"
}

success() {
  printf "${standout}${green} DONE ${normal} ${green}%s${normal}\n" "$1"
}

clrscr() {
  tput reset
}

execute() {
  info "running command: ""$command"""
  echo

  $@

  echo
  success "command was run successfully at $(date)"
}

# function fwatch() {

command="'$*'"

clrscr

execute $@ # first execute
info "watching dir(s): *.*"

# while inotifywait --quiet --exclude .swp -e modify -r .; do
inotifywait --quiet --event close_write --monitor --recursive . |
  while read directory events filename; do
    if ! echo "$directory" | grep -Eq '^\.\/\.git' &&
      ! git check-ignore --non-matching --verbose "${directory}/${filename}" >/dev/null 2>&1; then

      clrscr

      info "changed: ${normal}${directory}${filename}"

      execute $@

      info "watching dir(s): *.*\n\n"

    fi
  done

# }
